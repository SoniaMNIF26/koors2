{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-21T09:43:12.640Z",
    "end": "2024-07-21T09:45:20.844Z",
    "duration": 128204,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "742902f2-3518-4a40-8331-39901d8ae402",
      "title": "",
      "fullFile": "cypress\\e2e\\features\\auth\\studentImportList\\studentImportList.feature",
      "file": "cypress\\e2e\\features\\auth\\studentImportList\\studentImportList.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "02509a61-b540-4bdc-9605-12ac6bdb4bae",
          "title": "director Importing a list of students",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "download the template",
              "fullTitle": "director Importing a list of students download the template",
              "timedOut": null,
              "duration": 22921,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "543a4310-bcd9-4245-ab06-099e8e9bf38f",
              "parentUUID": "02509a61-b540-4bdc-9605-12ac6bdb4bae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "import an invalid list of student",
              "fullTitle": "director Importing a list of students import an invalid list of student",
              "timedOut": null,
              "duration": 19919,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "db18562b-21d4-4c91-bc1f-ea4a5dea5881",
              "parentUUID": "02509a61-b540-4bdc-9605-12ac6bdb4bae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "import a file with the wrong extention list of student",
              "fullTitle": "director Importing a list of students import a file with the wrong extention list of student",
              "timedOut": null,
              "duration": 13187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f782d457-a4a7-41f7-ba83-a52453cd3315",
              "parentUUID": "02509a61-b540-4bdc-9605-12ac6bdb4bae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "import a student without adding a file",
              "fullTitle": "director Importing a list of students import a student without adding a file",
              "timedOut": null,
              "duration": 15447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "51c2db61-8666-43fa-b019-ba5938f9c334",
              "parentUUID": "02509a61-b540-4bdc-9605-12ac6bdb4bae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "import a student without clicking on the chekbox",
              "fullTitle": "director Importing a list of students import a student without clicking on the chekbox",
              "timedOut": null,
              "duration": 24564,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "546836db-5ea3-435d-a599-b51f68f45948",
              "parentUUID": "02509a61-b540-4bdc-9605-12ac6bdb4bae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update the list of student",
              "fullTitle": "director Importing a list of students Update the list of student",
              "timedOut": null,
              "duration": 24099,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6d0bc1f4-71ce-4ed0-ac75-aeaf889165a9",
              "parentUUID": "02509a61-b540-4bdc-9605-12ac6bdb4bae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "543a4310-bcd9-4245-ab06-099e8e9bf38f",
            "db18562b-21d4-4c91-bc1f-ea4a5dea5881",
            "f782d457-a4a7-41f7-ba83-a52453cd3315",
            "51c2db61-8666-43fa-b019-ba5938f9c334",
            "546836db-5ea3-435d-a599-b51f68f45948",
            "6d0bc1f4-71ce-4ed0-ac75-aeaf889165a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 120137,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "Koors / SlashUp",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}